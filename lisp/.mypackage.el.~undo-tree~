(undo-tree-save-format-version . 1)
"dde931beb8c857bd5c4ccc36ac2b5781f200df88"
[nil nil nil nil (25643 48258 896724 775000) 0 nil]
([nil nil ((1 . 2) (t 25643 47762 570614 246000)) nil (25643 48258 896723 821000) 0 nil])
([nil nil ((2 . 5)) nil (25643 48258 896722 913000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -1) (undo-tree-id0 . -1) (#("g" 0 1 (fontified t)) . -2) (undo-tree-id1 . -1) (#("o" 0 1 (fontified t)) . -3) (undo-tree-id2 . -1) (#("o" 0 1 (fontified t)) . -4) (undo-tree-id3 . -1) 5) nil (25643 48258 896719 339000) 0 nil])
([nil nil ((2042 . 2044)) nil (25643 48258 896698 744000) 0 nil])
([nil nil ((2069 . 2071)) nil (25643 48258 896697 900000) 0 nil])
([nil nil ((2083 . 2085)) nil (25643 48258 896696 524000) 0 nil])
([nil nil ((2131 . 2133)) nil (25643 48258 896692 808000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . 2133) (t 25643 48258 910517 109000)) nil (25643 49024 358757 531000) 0 nil])
([nil nil ((11285 . 11293) (t 25643 48269 42370 924000)) nil (25643 49109 971389 810000) 0 nil] [nil nil ((1 . 19) (t 25643 48269 42370 924000)) ((#("

















" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t)) . 1) (undo-tree-id0 . -18) (undo-tree-id1 . -9)) (25643 49024 358581 26000) 0 nil])
([nil nil ((11293 . 11294)) nil (25643 49109 971388 866000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 11316 . 11317) (nil fontified nil 11294 . 11317) (11294 . 11317)) nil (25643 49109 971386 935000) 0 nil])
([nil nil ((11317 . 11318)) nil (25643 49109 971385 518000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11617 . 11618) (nil fontified nil 11318 . 11618) (11318 . 11618)) nil (25643 49109 971384 487000) 0 nil])
([nil nil ((11618 . 11620)) nil (25643 49244 199924 178000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -11598) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (#("s" 0 1 (fontified t)) . -11599) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (#("-" 0 1 (fontified t)) . -11600) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (#("t" 0 1 (fontified t)) . -11601) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (#("r" 0 1 (fontified t)) . -11602) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (#("e" 0 1 (fontified t)) . -11603) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (#("e" 0 1 (fontified t)) . -11604) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (#("m" 0 1 (fontified t)) . -11605) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (#("a" 0 1 (fontified t)) . -11606) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (#("c" 0 1 (fontified t)) . -11607) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (#("s" 0 1 (fontified t)) . -11608) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (#("-" 0 1 (fontified t)) . -11609) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (#("c" 0 1 (fontified t)) . -11610) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (#("o" 0 1 (fontified t)) . -11611) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (#("n" 0 1 (fontified t)) . -11612) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (#("f" 0 1 (fontified t)) . -11613) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (#("i" 0 1 (fontified t)) . -11614) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (#("g" 0 1 (fontified t)) . -11615) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -11616) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -11617) (undo-tree-id614 . -1) (undo-tree-id615 . 1) (undo-tree-id616 . -1) (#("
" 0 1 (fontified t)) . -11618) (undo-tree-id617 . -1) 11619) nil (25643 49269 796390 669000) 0 nil] [nil nil ((nil rear-nonsticky nil 11672 . 11673) (nil fontified nil 11620 . 11673) (11620 . 11673)) ((#("(use-package all-the-icons
  :if (display-graphic-p))" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face)) 1 12 (fontified nil face font-lock-keyword-face) 12 13 (fontified nil) 13 26 (fontified nil face font-lock-constant-face) 26 27 (fontified nil) 27 29 (fontified nil) 29 32 (fontified nil face font-lock-builtin-face) 32 33 (fontified nil) 33 34 (fontified nil face (rainbow-delimiters-depth-2-face)) 34 51 (fontified nil) 51 52 (fontified nil face (rainbow-delimiters-depth-2-face)) 52 53 (fontified nil face (rainbow-delimiters-depth-1-face) rear-nonsticky nil)) . 11620) (nil fontified t 11646 . 11647) (nil fontified t 11633 . 11646) (nil fontified t 11632 . 11633) (nil fontified t 11621 . 11632) (nil fontified t 11620 . 11621) (nil rear-nonsticky nil 11672 . 11673) (t 25643 49109 994023 534000)) (25643 49243 705369 974000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -11577) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (#("a" 0 1 (fontified t)) . -11578) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (#("g" 0 1 (fontified t)) . -11579) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (#("o" 0 1 (fontified t)) . -11580) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (#("n" 0 1 (fontified t)) . -11581) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (#(" " 0 1 (fontified t)) . -11582) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (#("t" 0 1 (fontified t)) . -11583) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -11584) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (#("
" 0 1 (fontified t)) . -11585) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (#(" " 0 1 (fontified t)) . -11586) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (#(" " 0 1 (fontified t)) . -11587) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -11588) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (#("d" 0 1 (fontified t)) . -11589) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (#("o" 0 1 (fontified t)) . -11590) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (#("o" 0 1 (fontified t)) . -11591) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (#("m" 0 1 (fontified t)) . -11592) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (#("-" 0 1 (fontified t)) . -11593) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (#("t" 0 1 (fontified t)) . -11594) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (#("h" 0 1 (fontified t)) . -11595) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (#("e" 0 1 (fontified t)) . -11596) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (#("m" 0 1 (fontified t)) . -11597) (undo-tree-id574 . -1) (undo-tree-id575 . -1) 11598) nil (25643 49269 796329 637000) 0 nil])
([nil nil ((11475 . 11476) (t 25643 49109 994023 534000)) ((#("v" 0 1 (fontified t)) . 11475) (undo-tree-id1 . -1)) (25643 49243 194391 924000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -11556) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (#("e" 0 1 (fontified t)) . -11557) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (#("m" 0 1 (fontified t)) . -11558) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (#("e" 0 1 (fontified t)) . -11559) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (#(" " 0 1 (fontified t)) . -11560) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (#("'" 0 1 (fontified t)) . -11561) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (#("d" 0 1 (fontified t)) . -11562) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (#("o" 0 1 (fontified t)) . -11563) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (#("o" 0 1 (fontified t)) . -11564) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (#("m" 0 1 (fontified t)) . -11565) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (#("-" 0 1 (fontified t)) . -11566) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (#("m" 0 1 (fontified t)) . -11567) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (#("o" 0 1 (fontified t)) . -11568) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (#("n" 0 1 (fontified t)) . -11569) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (#("o" 0 1 (fontified t)) . -11570) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (#("k" 0 1 (fontified t)) . -11571) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (#("a" 0 1 (fontified t)) . -11572) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (#("i" 0 1 (fontified t)) . -11573) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (#("-" 0 1 (fontified t)) . -11574) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (#("o" 0 1 (fontified t)) . -11575) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (#("c" 0 1 (fontified t)) . -11576) (undo-tree-id532 . -1) (undo-tree-id533 . -1) 11577) nil (25643 49269 796266 970000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -11475) (undo-tree-id0 . -1) 11476) ((11475 . 11476)) (25643 49243 194331 700000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t face font-lock-comment-face)) . -11535) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (#("y" 0 1 (fontified t face font-lock-comment-face)) . -11536) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -11537) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (#("d" 0 1 (fontified t face font-lock-comment-face)) . -11538) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -11539) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -11540) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -11541) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (#("b" 0 1 (fontified t face font-lock-comment-face)) . -11542) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (#("l" 0 1 (fontified t face font-lock-comment-face)) . -11543) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -11544) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (#("d" 0 1 (fontified t face font-lock-comment-face)) . -11545) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (#("
" 0 1 (fontified t face font-lock-comment-face)) . -11546) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (#(" " 0 1 (fontified t)) . -11547) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (#(" " 0 1 (fontified t)) . -11548) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -11549) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (#("l" 0 1 (fontified t)) . -11550) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (#("o" 0 1 (fontified t)) . -11551) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (#("a" 0 1 (fontified t)) . -11552) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (#("d" 0 1 (fontified t)) . -11553) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (#("-" 0 1 (fontified t)) . -11554) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (#("t" 0 1 (fontified t)) . -11555) (undo-tree-id490 . -1) (undo-tree-id491 . -1) 11556) nil (25643 49269 796205 946000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -11514) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -11515) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -11516) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -11517) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (#("l" 0 1 (fontified t face font-lock-comment-face)) . -11518) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -11519) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (#("c" 0 1 (fontified t face font-lock-comment-face)) . -11520) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -11521) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -11522) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -11523) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -11524) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -11525) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (#("u" 0 1 (fontified t face font-lock-comment-face)) . -11526) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -11527) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -11528) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (#("v" 0 1 (fontified t face font-lock-comment-face)) . -11529) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -11530) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -11531) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -11532) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -11533) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (#("l" 0 1 (fontified t face font-lock-comment-face)) . -11534) (undo-tree-id448 . -1) (undo-tree-id449 . -1) 11535) nil (25643 49269 796132 758000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -11493) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (#("-" 0 1 (fontified t)) . -11494) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (#("i" 0 1 (fontified t)) . -11495) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (#("t" 0 1 (fontified t)) . -11496) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (#("a" 0 1 (fontified t)) . -11497) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (#("l" 0 1 (fontified t)) . -11498) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (#("i" 0 1 (fontified t)) . -11499) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (#("c" 0 1 (fontified t)) . -11500) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (#(" " 0 1 (fontified t)) . -11501) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (#("t" 0 1 (fontified t)) . -11502) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -11503) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (#(" " 0 1 (fontified t)) . -11504) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -11505) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . -11506) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -11507) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (#("f" 0 1 (fontified t face font-lock-comment-face)) . -11508) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -11509) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -11510) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -11511) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (#("l" 0 1 (fontified t face font-lock-comment-face)) . -11512) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (#("," 0 1 (fontified t face font-lock-comment-face)) . -11513) (undo-tree-id406 . -1) (undo-tree-id407 . -1) 11514) nil (25643 49269 796071 278000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -11476) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (#("o" 0 1 (fontified t)) . -11477) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (#("o" 0 1 (fontified t)) . -11478) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (#("m" 0 1 (fontified t)) . -11479) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (#("-" 0 1 (fontified t)) . -11480) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (#("t" 0 1 (fontified t)) . -11481) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (#("h" 0 1 (fontified t)) . -11482) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (#("e" 0 1 (fontified t)) . -11483) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (#("m" 0 1 (fontified t)) . -11484) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (#("e" 0 1 (fontified t)) . -11485) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (#("s" 0 1 (fontified t)) . -11486) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (#("-" 0 1 (fontified t)) . -11487) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (#("e" 0 1 (fontified t)) . -11488) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (#("n" 0 1 (fontified t)) . -11489) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (#("a" 0 1 (fontified t)) . -11490) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (#("b" 0 1 (fontified t)) . -11491) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (#("l" 0 1 (fontified t)) . -11492) (undo-tree-id364 . -1) (undo-tree-id365 . -1) 11493) nil (25643 49269 795968 277000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11479) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (#(" " 0 1 (fontified t)) . -11480) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (#(" " 0 1 (fontified t)) . -11481) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (#(" " 0 1 (fontified nil)) . -11482) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (#("	" 0 1 (fontified nil)) . 11483) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (11475 . 11483) 11476) nil (25643 49269 795919 162000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face font-lock-comment-face)) . -11458) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -11459) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -11460) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -11461) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (#("l" 0 1 (fontified t face font-lock-comment-face)) . -11462) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (#("l" 0 1 (fontified t face font-lock-comment-face)) . -11463) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (#("y" 0 1 (fontified t face font-lock-comment-face)) . -11464) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -11465) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (#("d" 0 1 (fontified t face font-lock-comment-face)) . -11466) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -11467) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -11468) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -11469) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (#("b" 0 1 (fontified t face font-lock-comment-face)) . -11470) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (#("l" 0 1 (fontified t face font-lock-comment-face)) . -11471) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -11472) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (#("d" 0 1 (fontified t face font-lock-comment-face)) . -11473) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (#("
" 0 1 (fontified t face font-lock-comment-face)) . -11474) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (#(" " 0 1 (fontified t)) . -11475) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (#(" " 0 1 (fontified t)) . -11476) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (#(" " 0 1 (fontified t)) . -11477) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (#(" " 0 1 (fontified t)) . -11478) (undo-tree-id319 . -1) (undo-tree-id320 . -1) 11479) nil (25643 49269 795889 96000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . -11437) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -11438) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (#("f" 0 1 (fontified t face font-lock-comment-face)) . -11439) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -11440) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -11441) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -11442) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (#("l" 0 1 (fontified t face font-lock-comment-face)) . -11443) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (#("," 0 1 (fontified t face font-lock-comment-face)) . -11444) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -11445) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (#("b" 0 1 (fontified t face font-lock-comment-face)) . -11446) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -11447) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (#("l" 0 1 (fontified t face font-lock-comment-face)) . -11448) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (#("d" 0 1 (fontified t face font-lock-comment-face)) . -11449) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -11450) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -11451) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -11452) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -11453) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (#("u" 0 1 (fontified t face font-lock-comment-face)) . -11454) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -11455) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -11456) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (#("v" 0 1 (fontified t face font-lock-comment-face)) . -11457) (undo-tree-id277 . -1) (undo-tree-id278 . -1) 11458) nil (25643 49269 795828 544000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -11416) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (#("e" 0 1 (fontified t)) . -11417) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (#("n" 0 1 (fontified t)) . -11418) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (#("a" 0 1 (fontified t)) . -11419) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (#("b" 0 1 (fontified t)) . -11420) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (#("l" 0 1 (fontified t)) . -11421) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (#("e" 0 1 (fontified t)) . -11422) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (#("-" 0 1 (fontified t)) . -11423) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (#("b" 0 1 (fontified t)) . -11424) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (#("o" 0 1 (fontified t)) . -11425) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (#("l" 0 1 (fontified t)) . -11426) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (#("d" 0 1 (fontified t)) . -11427) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (#(" " 0 1 (fontified t)) . -11428) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (#("n" 0 1 (fontified t)) . -11429) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (#("i" 0 1 (fontified t)) . -11430) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (#("l" 0 1 (fontified t)) . -11431) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (#(" " 0 1 (fontified t)) . -11432) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (#(" " 0 1 (fontified t)) . -11433) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (#(" " 0 1 (fontified t)) . -11434) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (#(" " 0 1 (fontified t)) . -11435) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -11436) (undo-tree-id235 . -1) (undo-tree-id236 . -1) 11437) nil (25643 49269 795766 84000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face font-lock-comment-face)) . -11395) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (#("
" 0 1 (fontified t face font-lock-comment-face)) . -11396) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (#(" " 0 1 (fontified t)) . -11397) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (#(" " 0 1 (fontified t)) . -11398) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -11399) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (#("s" 0 1 (fontified t)) . -11400) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (#("e" 0 1 (fontified t)) . -11401) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (#("t" 0 1 (fontified t)) . -11402) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (#("q" 0 1 (fontified t face font-lock-keyword-face)) . -11403) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (#(" " 0 1 (fontified t)) . -11404) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (#("d" 0 1 (fontified t)) . -11405) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (#("o" 0 1 (fontified t)) . -11406) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (#("o" 0 1 (fontified t)) . -11407) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (#("m" 0 1 (fontified t)) . -11408) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (#("-" 0 1 (fontified t)) . -11409) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (#("t" 0 1 (fontified t)) . -11410) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (#("h" 0 1 (fontified t)) . -11411) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (#("e" 0 1 (fontified t)) . -11412) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (#("m" 0 1 (fontified t)) . -11413) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (#("e" 0 1 (fontified t)) . -11414) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (#("s" 0 1 (fontified t)) . -11415) (undo-tree-id193 . -1) (undo-tree-id194 . -1) 11416) nil (25643 49269 795698 533000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face font-lock-comment-face)) . -11374) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (#("l" 0 1 (fontified t face font-lock-comment-face)) . -11375) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -11376) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -11377) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -11378) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -11379) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -11380) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -11381) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -11382) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (#("g" 0 1 (fontified t face font-lock-comment-face)) . -11383) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -11384) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -11385) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (#("(" 0 1 (fontified t face font-lock-comment-face)) . -11386) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (#("d" 0 1 (fontified t face font-lock-comment-face)) . -11387) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -11388) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (#("f" 0 1 (fontified t face font-lock-comment-face)) . -11389) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -11390) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (#("u" 0 1 (fontified t face font-lock-comment-face)) . -11391) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (#("l" 0 1 (fontified t face font-lock-comment-face)) . -11392) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -11393) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -11394) (undo-tree-id151 . -1) (undo-tree-id152 . -1) 11395) nil (25643 49269 795634 953000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -11353) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (#("
" 0 1 (fontified t)) . -11354) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#(" " 0 1 (fontified t)) . -11355) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (#(" " 0 1 (fontified t)) . -11356) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (#(":" 0 1 (fontified t)) . -11357) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (#("c" 0 1 (fontified t face font-lock-builtin-face)) . -11358) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (#("o" 0 1 (fontified t face font-lock-builtin-face)) . -11359) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (#("n" 0 1 (fontified t face font-lock-builtin-face)) . -11360) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (#("f" 0 1 (fontified t face font-lock-builtin-face)) . -11361) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (#("i" 0 1 (fontified t face font-lock-builtin-face)) . -11362) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (#("g" 0 1 (fontified t face font-lock-builtin-face)) . -11363) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (#("
" 0 1 (fontified t)) . -11364) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (#(" " 0 1 (fontified t)) . -11365) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (#(" " 0 1 (fontified t)) . -11366) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -11367) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -11368) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . -11369) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (#("G" 0 1 (fontified t face font-lock-comment-face)) . -11370) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (#("l" 0 1 (fontified t face font-lock-comment-face)) . -11371) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -11372) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (#("b" 0 1 (fontified t face font-lock-comment-face)) . -11373) (undo-tree-id109 . -1) (undo-tree-id110 . -1) 11374) nil (25643 49269 795464 862000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face font-lock-constant-face)) . -11332) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (#("o" 0 1 (fontified t face font-lock-constant-face)) . -11333) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (#("m" 0 1 (fontified t face font-lock-constant-face)) . -11334) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (#("-" 0 1 (fontified t face font-lock-constant-face)) . -11335) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (#("t" 0 1 (fontified t face font-lock-constant-face)) . -11336) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (#("h" 0 1 (fontified t face font-lock-constant-face)) . -11337) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#("e" 0 1 (fontified t face font-lock-constant-face)) . -11338) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (#("m" 0 1 (fontified t face font-lock-constant-face)) . -11339) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (#("e" 0 1 (fontified t face font-lock-constant-face)) . -11340) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#("s" 0 1 (fontified t face font-lock-constant-face)) . -11341) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#("
" 0 1 (fontified t)) . -11342) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (#(" " 0 1 (fontified t)) . -11343) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (#(" " 0 1 (fontified t)) . -11344) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#(":" 0 1 (fontified t)) . -11345) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#("e" 0 1 (fontified t face font-lock-builtin-face)) . -11346) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (#("n" 0 1 (fontified t face font-lock-builtin-face)) . -11347) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (#("s" 0 1 (fontified t face font-lock-builtin-face)) . -11348) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (#("u" 0 1 (fontified t face font-lock-builtin-face)) . -11349) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#("r" 0 1 (fontified t face font-lock-builtin-face)) . -11350) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (#("e" 0 1 (fontified t face font-lock-builtin-face)) . -11351) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (#(" " 0 1 (fontified t)) . -11352) (undo-tree-id67 . -1) (undo-tree-id68 . -1) 11353) nil (25643 49269 795136 128000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -11320) (undo-tree-id4 . -1) (#("e" 0 1 (fontified t)) . -11321) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (#("-" 0 1 (fontified t)) . -11322) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (#("p" 0 1 (fontified t)) . -11323) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (#("a" 0 1 (fontified t)) . -11324) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#("c" 0 1 (fontified t)) . -11325) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#("k" 0 1 (fontified t)) . -11326) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (#("a" 0 1 (fontified t)) . -11327) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (#("g" 0 1 (fontified t)) . -11328) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#("e" 0 1 (fontified t face font-lock-keyword-face)) . -11329) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#(" " 0 1 (fontified t)) . -11330) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (#("d" 0 1 (fontified t face font-lock-constant-face)) . -11331) (undo-tree-id25 . -1) (undo-tree-id26 . -1) 11332) nil (25643 49269 795077 628000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -11318) (undo-tree-id2 . -1) (#("u" 0 1 (fontified t)) . -11319) (undo-tree-id3 . -1) 11320) nil (25643 49269 795044 778000) 0 nil])
([nil nil ((11320 . 11332) (11319 . 11321) (#("(" 0 1 (fontified nil)) . -11319) (11319 . 11320) (t 25643 49269 808887 280000)) nil (25643 50000 166400 233000) 0 nil])
([nil nil ((11332 . 11335)) nil (25643 50000 166398 718000) 0 nil])
([nil nil ((nil fontified nil 11336 . 11339) (nil face font-lock-constant-face 11336 . 11339) (#("dra" 0 3 (face font-lock-constant-face fontified nil)) . -11332) (11335 . 11342) 11335) nil (25643 50000 166397 625000) 0 nil])
([nil nil ((11339 . 11342)) nil (25643 50000 166396 102000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-constant-face fontified t)) . -11339) (undo-tree-id23 . -1) (#("t" 0 1 (face font-lock-constant-face fontified t)) . -11340) (undo-tree-id24 . -1) (#("h" 0 1 (face font-lock-constant-face fontified t)) . -11341) (undo-tree-id25 . -1) 11342) nil (25643 50000 166394 876000) 0 nil])
([nil nil ((nil fontified t 11335 . 11342) (nil face font-lock-constant-face 11335 . 11342) (#("dracula" 0 7 (face font-lock-constant-face fontified t)) . -11332) (11339 . 11349) 11339) nil (25643 50000 166391 500000) 0 nil])
([nil nil ((#("dracula-th" 0 10 (face font-lock-constant-face fontified nil)) . 11339) (undo-tree-id22 . -10) (11332 . 11339) 11342) nil (25643 50000 166389 452000) 0 nil])
([nil nil ((11339 . 11340)) nil (25643 50000 166387 606000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-constant-face fontified t)) . -11339) (undo-tree-id21 . -1) 11340) nil (25643 50000 166386 595000) 0 nil])
([nil nil ((11339 . 11342)) nil (25643 50000 166384 990000) 0 nil])
([nil nil ((11342 . 11347)) nil (25643 50000 166384 251000) 0 nil])
([nil nil ((11347 . 11350)) nil (25643 50000 166383 464000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-builtin-face fontified t)) . -11343) (undo-tree-id17 . -1) (#("n" 0 1 (face font-lock-builtin-face fontified t)) . -11344) (undo-tree-id18 . -1) (#("i" 0 1 (face font-lock-builtin-face fontified t)) . -11345) (undo-tree-id19 . -1) (#("t" 0 1 (face font-lock-builtin-face fontified t)) . -11346) (undo-tree-id20 . -1) 11347) nil (25643 50000 166381 920000) 0 nil])
([nil nil ((11343 . 11351)) nil (25643 50000 166378 77000) 0 nil])
([nil nil ((11351 . 11354)) nil (25643 50000 166377 319000) 0 nil])
([nil nil ((11354 . 11359)) nil (25643 50000 166376 594000) 0 nil])
([nil nil ((11359 . 11362)) nil (25643 50000 166375 822000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11397 . 11398) (nil fontified nil 11362 . 11398) (11362 . 11398)) nil (25643 50000 166374 712000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . -11397) (undo-tree-id16 . -1) 11398) nil (25643 50000 166373 553000) 0 nil])
([nil nil ((11397 . 11400)) nil (25643 50000 166371 993000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11877 . 11878) (nil fontified nil 11400 . 11878) (11400 . 11878)) nil (25643 50000 166371 8000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . -11451) (undo-tree-id15 . -1) 11452) nil (25643 50000 166369 801000) 0 nil])
([nil nil ((11451 . 11454)) nil (25643 50000 166368 111000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -11488) (undo-tree-id13 . -1) (#("
" 0 1 (fontified t)) . -11489) (undo-tree-id14 . -1) 11490) nil (25643 50000 166366 793000) 0 nil])
([nil nil ((11488 . 11491)) nil (25643 50000 166364 630000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . -11542) (undo-tree-id12 . -1) 11543) nil (25643 50000 166363 633000) 0 nil])
([nil nil ((11542 . 11545)) nil (25643 50000 166362 130000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -11579) (undo-tree-id10 . -1) (#("
" 0 1 (fontified t)) . -11580) (undo-tree-id11 . -1) 11581) nil (25643 50000 166361 122000) 0 nil])
([nil nil ((11579 . 11582)) nil (25643 50000 166358 891000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . -11633) (undo-tree-id9 . -1) 11634) nil (25643 50000 166357 868000) 0 nil])
([nil nil ((11633 . 11636)) nil (25643 50000 166356 305000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -11670) (undo-tree-id8 . -1) 11671) nil (25643 50000 166355 284000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -11670) (undo-tree-id7 . -1) 11671) nil (25643 50000 166353 598000) 0 nil])
([nil nil ((11670 . 11673)) nil (25643 50000 166352 63000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . -11726) (undo-tree-id6 . -1) 11727) nil (25643 50000 166350 948000) 0 nil])
([nil nil ((11726 . 11729)) nil (25643 50000 166349 469000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -11764) (undo-tree-id4 . -1) (#("
" 0 1 (fontified t)) . -11765) (undo-tree-id5 . -1) 11766) nil (25643 50000 166348 299000) 0 nil])
([nil nil ((11764 . 11767)) nil (25643 50000 166345 910000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . -11838) (undo-tree-id3 . -1) 11839) nil (25643 50000 166344 821000) 0 nil])
([nil nil ((11838 . 11841)) nil (25643 50000 166343 85000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11894) (undo-tree-id2 . -1) 11895) nil (25643 50000 166341 587000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -11892) (undo-tree-id0 . -1) (#(" " 0 1 (fontified t)) . -11893) (undo-tree-id1 . -1) 11894) nil (25643 50000 166337 295000) 0 nil])
([nil current ((11294 . 11296) (t 25643 50000 180268 606000)) nil (25643 50088 295382 413000) 0 nil])
nil
